
--find the FirstName and LastName of customers
--who have placed an order for both the book 'Pride and Prejudice'
--AND the book 'Great Expectations'.

SELECT C.FirstName, C.LastName
FROM Customers AS C
JOIN Orders AS O ON C.CustomerID = O.CustomerID
JOIN OrderDetails AS OD ON O.OrderID = OD.OrderID
JOIN Books AS B ON OD.BookID = B.BookID
WHERE B.Title = 'Pride and Prejudice'

INTERSECT

SELECT C.FirstName, C.LastName
FROM Customers AS C
JOIN Orders AS O ON C.CustomerID = O.CustomerID
JOIN OrderDetails AS OD ON O.OrderID = OD.OrderID
JOIN Books AS B ON OD.BookID = B.BookID
WHERE B.Title = 'Great Expectations';


--list all unique FirstName values that appear in either the Customers table or the Authors table.

SELECT DISTINCT FirstName FROM [dbo].[Customers]
UNION
SELECT DISTINCT FirstName FROM [dbo].[Authors]

--find the Title of all books that have a Price greater than 20.00, but have not been ordered by the customer with CustomerID 1.

SELECT B.Title
FROM Books AS B
WHERE B.Price > 20.00

EXCEPT

SELECT B2.Title
FROM Customers AS C
JOIN Orders AS O ON C.CustomerID = O.CustomerID
JOIN OrderDetails AS OD ON O.OrderID = OD.OrderID
JOIN Books AS B2 ON OD.BookID = B2.BookID
WHERE C.CustomerID = 1;


--query using a derived table to find the FirstName and LastName of customer
--whose average TotalAmount per order is greater than the overall average TotalAmount of all orders.
SELECT
    C.FirstName,
    C.LastName
FROM
    Customers AS C
JOIN (
    SELECT
        CustomerID,
        AVG(TotalAmount) AS CustomerAvgOrderAmount
    FROM
        Orders
    GROUP BY
        CustomerID
) AS CustomerAvgOrders ON C.CustomerID = CustomerAvgOrders.CustomerID
WHERE
    CustomerAvgOrders.CustomerAvgOrderAmount > (
        SELECT AVG(TotalAmount)
        FROM Orders
    );


--using a Common Table Expression (CTE) to calculate the total revenue generated by books from each author.
--The result should display the FirstName, LastName of the author, and their TotalRevenue.

WITH AuthorRevenue AS (
    SELECT
        A.FirstName,
        A.LastName,
        SUM(OD.Quantity * OD.PriceAtOrder) AS TotalRevenue
    FROM
        Authors AS A
    JOIN
        Books AS B ON A.AuthorID = B.AuthorID
    JOIN
        OrderDetails AS OD ON B.BookID = OD.BookID
    GROUP BY
        A.AuthorID, A.FirstName, A.LastName
)
SELECT
    FirstName,
    LastName,
    TotalRevenue
FROM
    AuthorRevenue
ORDER BY
    TotalRevenue DESC;


